[
  {
    "Constant" : [

    ],
    "submodules" : [

    ],
    "Function" : [
      {
        "def" : "Hints:windowHints([windows, callback, allowNonStandard])",
        "stripped_doc" : [
          "Displays a keyboard hints for switching focus to each window",
          ""
        ],
        "parameters" : [
          " * windows - An optional table containing some `hs.window` objects. If this value is nil, all windows will be hintsed",
          " * callback - An optional function that will be called when a window has been selected by the user. The function will be called with a single argument containing the `hs.window` object of the window chosen by the user",
          " * allowNonStandard - An optional boolean.  If true, all windows will be included, not just standard windows",
          ""
        ],
        "doc" : "Displays a keyboard hints for switching focus to each window\n\nParameters:\n * windows - An optional table containing some `hs.window` objects. If this value is nil, all windows will be hintsed\n * callback - An optional function that will be called when a window has been selected by the user. The function will be called with a single argument containing the `hs.window` object of the window chosen by the user\n * allowNonStandard - An optional boolean.  If true, all windows will be included, not just standard windows\n\nReturns:\n * None\n\nNotes:\n * If there are more windows open than there are characters available in Hints.hintChars, multiple characters will be used\n * If Hints.style is set to \"vimperator\", every window hints is prefixed with the first character of the parent application's name\n * To display Hints only for the currently focused application, try something like:\n  * `Hints:windowHints(hs.window.focusedWindow():application():allWindows())`",
        "notes" : [
          " * If there are more windows open than there are characters available in Hints.hintChars, multiple characters will be used",
          " * If Hints.style is set to \"vimperator\", every window hints is prefixed with the first character of the parent application's name",
          " * To display Hints only for the currently focused application, try something like:",
          "  * `Hints:windowHints(hs.window.focusedWindow():application():allWindows())`"
        ],
        "signature" : "Hints:windowHints([windows, callback, allowNonStandard])",
        "type" : "Function",
        "returns" : [
          " * None",
          ""
        ],
        "desc" : "Displays a keyboard hints for switching focus to each window",
        "name" : "windowHints"
      }
    ],
    "Variable" : [
      {
        "def" : "Hints.hintChars",
        "stripped_doc" : [
          "This controls the set of characters that will be used for window obj. They must be characters found in hs.keycodes.map",
          "The default is the letters A-Z. Note that if `obj.style` is set to \"vimperator\", this variable will be ignored."
        ],
        "parameters" : [

        ],
        "doc" : "This controls the set of characters that will be used for window obj. They must be characters found in hs.keycodes.map\nThe default is the letters A-Z. Note that if `obj.style` is set to \"vimperator\", this variable will be ignored.",
        "notes" : [

        ],
        "signature" : "Hints.hintChars",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "This controls the set of characters that will be used for window obj. They must be characters found in hs.keycodes.map",
        "name" : "hintChars"
      },
      {
        "def" : "Hints.style",
        "stripped_doc" : [
          "If this is set to \"vimperator\", every window hints starts with the first character",
          "of the parent application's title"
        ],
        "parameters" : [

        ],
        "doc" : "If this is set to \"vimperator\", every window hints starts with the first character\nof the parent application's title",
        "notes" : [

        ],
        "signature" : "Hints.style",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If this is set to \"vimperator\", every window hints starts with the first character",
        "name" : "style"
      },
      {
        "def" : "Hints.fontName",
        "stripped_doc" : [
          "A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)",
          "The default value is the system font"
        ],
        "parameters" : [

        ],
        "doc" : "A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)\nThe default value is the system font",
        "notes" : [

        ],
        "signature" : "Hints.fontName",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)",
        "name" : "fontName"
      },
      {
        "def" : "Hints.fontSize",
        "stripped_doc" : [
          "The size of font that should be used. A value of 0.0 will use the default size."
        ],
        "parameters" : [

        ],
        "doc" : "The size of font that should be used. A value of 0.0 will use the default size.",
        "notes" : [

        ],
        "signature" : "Hints.fontSize",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "The size of font that should be used. A value of 0.0 will use the default size.",
        "name" : "fontSize"
      },
      {
        "def" : "Hints.showTitleThresh",
        "stripped_doc" : [
          "If there are less than or equal to this many windows on screen their titles will be shown in the obj.",
          "The default is 4. Setting to 0 will disable this feature."
        ],
        "parameters" : [

        ],
        "doc" : "If there are less than or equal to this many windows on screen their titles will be shown in the obj.\nThe default is 4. Setting to 0 will disable this feature.",
        "notes" : [

        ],
        "signature" : "Hints.showTitleThresh",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If there are less than or equal to this many windows on screen their titles will be shown in the obj.",
        "name" : "showTitleThresh"
      },
      {
        "def" : "Hints.titleMaxSize",
        "stripped_doc" : [
          "If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6"
        ],
        "parameters" : [

        ],
        "doc" : "If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6",
        "notes" : [

        ],
        "signature" : "Hints.titleMaxSize",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6",
        "name" : "titleMaxSize"
      }
    ],
    "stripped_doc" : [

    ],
    "desc" : "Switch focus with a transient per-application keyboard shortcut",
    "Deprecated" : [

    ],
    "type" : "Module",
    "Constructor" : [

    ],
    "Field" : [

    ],
    "Method" : [

    ],
    "items" : [
      {
        "def" : "Hints.fontName",
        "stripped_doc" : [
          "A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)",
          "The default value is the system font"
        ],
        "parameters" : [

        ],
        "doc" : "A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)\nThe default value is the system font",
        "notes" : [

        ],
        "signature" : "Hints.fontName",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "A fully specified family-face name, preferrably the PostScript name, such as Helvetica-BoldOblique or Times-Roman. (The Font Book app displays PostScript names of fonts in the Font Info panel.)",
        "name" : "fontName"
      },
      {
        "def" : "Hints.fontSize",
        "stripped_doc" : [
          "The size of font that should be used. A value of 0.0 will use the default size."
        ],
        "parameters" : [

        ],
        "doc" : "The size of font that should be used. A value of 0.0 will use the default size.",
        "notes" : [

        ],
        "signature" : "Hints.fontSize",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "The size of font that should be used. A value of 0.0 will use the default size.",
        "name" : "fontSize"
      },
      {
        "def" : "Hints.hintChars",
        "stripped_doc" : [
          "This controls the set of characters that will be used for window obj. They must be characters found in hs.keycodes.map",
          "The default is the letters A-Z. Note that if `obj.style` is set to \"vimperator\", this variable will be ignored."
        ],
        "parameters" : [

        ],
        "doc" : "This controls the set of characters that will be used for window obj. They must be characters found in hs.keycodes.map\nThe default is the letters A-Z. Note that if `obj.style` is set to \"vimperator\", this variable will be ignored.",
        "notes" : [

        ],
        "signature" : "Hints.hintChars",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "This controls the set of characters that will be used for window obj. They must be characters found in hs.keycodes.map",
        "name" : "hintChars"
      },
      {
        "def" : "Hints.showTitleThresh",
        "stripped_doc" : [
          "If there are less than or equal to this many windows on screen their titles will be shown in the obj.",
          "The default is 4. Setting to 0 will disable this feature."
        ],
        "parameters" : [

        ],
        "doc" : "If there are less than or equal to this many windows on screen their titles will be shown in the obj.\nThe default is 4. Setting to 0 will disable this feature.",
        "notes" : [

        ],
        "signature" : "Hints.showTitleThresh",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If there are less than or equal to this many windows on screen their titles will be shown in the obj.",
        "name" : "showTitleThresh"
      },
      {
        "def" : "Hints.style",
        "stripped_doc" : [
          "If this is set to \"vimperator\", every window hints starts with the first character",
          "of the parent application's title"
        ],
        "parameters" : [

        ],
        "doc" : "If this is set to \"vimperator\", every window hints starts with the first character\nof the parent application's title",
        "notes" : [

        ],
        "signature" : "Hints.style",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If this is set to \"vimperator\", every window hints starts with the first character",
        "name" : "style"
      },
      {
        "def" : "Hints.titleMaxSize",
        "stripped_doc" : [
          "If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6"
        ],
        "parameters" : [

        ],
        "doc" : "If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6",
        "notes" : [

        ],
        "signature" : "Hints.titleMaxSize",
        "type" : "Variable",
        "returns" : [

        ],
        "desc" : "If the title is longer than maxSize, the string is truncated, -1 to disable, valid value is >= 6",
        "name" : "titleMaxSize"
      },
      {
        "def" : "Hints:windowHints([windows, callback, allowNonStandard])",
        "stripped_doc" : [
          "Displays a keyboard hints for switching focus to each window",
          ""
        ],
        "parameters" : [
          " * windows - An optional table containing some `hs.window` objects. If this value is nil, all windows will be hintsed",
          " * callback - An optional function that will be called when a window has been selected by the user. The function will be called with a single argument containing the `hs.window` object of the window chosen by the user",
          " * allowNonStandard - An optional boolean.  If true, all windows will be included, not just standard windows",
          ""
        ],
        "doc" : "Displays a keyboard hints for switching focus to each window\n\nParameters:\n * windows - An optional table containing some `hs.window` objects. If this value is nil, all windows will be hintsed\n * callback - An optional function that will be called when a window has been selected by the user. The function will be called with a single argument containing the `hs.window` object of the window chosen by the user\n * allowNonStandard - An optional boolean.  If true, all windows will be included, not just standard windows\n\nReturns:\n * None\n\nNotes:\n * If there are more windows open than there are characters available in Hints.hintChars, multiple characters will be used\n * If Hints.style is set to \"vimperator\", every window hints is prefixed with the first character of the parent application's name\n * To display Hints only for the currently focused application, try something like:\n  * `Hints:windowHints(hs.window.focusedWindow():application():allWindows())`",
        "notes" : [
          " * If there are more windows open than there are characters available in Hints.hintChars, multiple characters will be used",
          " * If Hints.style is set to \"vimperator\", every window hints is prefixed with the first character of the parent application's name",
          " * To display Hints only for the currently focused application, try something like:",
          "  * `Hints:windowHints(hs.window.focusedWindow():application():allWindows())`"
        ],
        "signature" : "Hints:windowHints([windows, callback, allowNonStandard])",
        "type" : "Function",
        "returns" : [
          " * None",
          ""
        ],
        "desc" : "Displays a keyboard hints for switching focus to each window",
        "name" : "windowHints"
      }
    ],
    "Command" : [

    ],
    "doc" : "Switch focus with a transient per-application keyboard shortcut",
    "name" : "Hints"
  }
]